<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.phone.mapper.ProductMapper" >
  <resultMap id="BaseResultMap" type="cn.com.phone.pojo.Product" >
    <id column="PRODUCT_ID" property="productId" jdbcType="INTEGER" />
    <result column="PRODUCT_NAME" property="productName" jdbcType="VARCHAR" />
    <result column="PIC_FILE_PATH" property="picFilePath" jdbcType="VARCHAR" />
    <result column="PIC_NAME_TYPE" property="picNameType" jdbcType="VARCHAR" />
    <result column="BRAND" property="brand" jdbcType="VARCHAR" />
    <result column="PRICE" property="price" jdbcType="DECIMAL" />
    <result column="PRODUCT_DESC" property="productDesc" jdbcType="VARCHAR" />
    <result column="STATE" property="state" jdbcType="INTEGER" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="DONE_DATE" property="doneDate" jdbcType="TIMESTAMP" />
    <result column="REMARSK" property="remarsk" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    productID, product_name, product_price, product_address, product_ctiy, product_mess, 
    product_pic
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.phone.pojo.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
   <select id="selectByProductId"  parameterType="java.lang.Integer" resultMap="BaseResultMap"  >
    	select  *  from huawei_info where PRODUCT_ID = #{productId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product
    where productID = #{productid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.phone.pojo.ProductExample" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.phone.pojo.Product" >
    insert into product (productID, product_name, product_price, 
      product_address, product_ctiy, product_mess, 
      product_pic)
    values (#{productid,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{productPrice,jdbcType=DOUBLE}, 
      #{productAddress,jdbcType=VARCHAR}, #{productCtiy,jdbcType=VARCHAR}, #{productMess,jdbcType=VARCHAR}, 
      #{productPic,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.phone.pojo.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="productid != null" >
        productID,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="productPrice != null" >
        product_price,
      </if>
      <if test="productAddress != null" >
        product_address,
      </if>
      <if test="productCtiy != null" >
        product_ctiy,
      </if>
      <if test="productMess != null" >
        product_mess,
      </if>
      <if test="productPic != null" >
        product_pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="productid != null" >
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productPrice != null" >
        #{productPrice,jdbcType=DOUBLE},
      </if>
      <if test="productAddress != null" >
        #{productAddress,jdbcType=VARCHAR},
      </if>
      <if test="productCtiy != null" >
        #{productCtiy,jdbcType=VARCHAR},
      </if>
      <if test="productMess != null" >
        #{productMess,jdbcType=VARCHAR},
      </if>
      <if test="productPic != null" >
        #{productPic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.phone.pojo.ProductExample" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKey" parameterType="cn.com.phone.pojo.Product" >
    update product
    set product_name = #{productName,jdbcType=VARCHAR},
      product_price = #{productPrice,jdbcType=DOUBLE},
      product_address = #{productAddress,jdbcType=VARCHAR},
      product_ctiy = #{productCtiy,jdbcType=VARCHAR},
      product_mess = #{productMess,jdbcType=VARCHAR},
      product_pic = #{productPic,jdbcType=VARCHAR}
    where productID = #{productid,jdbcType=INTEGER}
  </update>
		 <!-- 用户查询条件 -->
<!--      <sql  id="query_product1_where">
      使用动态sql,通过if判断
         用户的查询条件通过ProductQueryVo中的productImp属性传递
      
         <if test="productImp!=null">
         判断空时不能有空格
              <if test="productImp.productname!=null  and  productImp.productname!=''">
                 and  product.productname like "%" #{productImp.productname} "%"         
              </if>
         </if>
     </sql> -->
     
     <!-- 用户列表查询 -->
     <!-- parameterType 传入包装对象 ,resultType建议使用扩展类-->
<!--      <select id="findProductList" parameterType="cn.com.phone.pojo.ProductQueryVo"  resultType="cn.com.phone.pojo.ProductImp">
        select * from product 
       <where>
           <include refid="query_product1_where" />
        </where> 
     </select> -->
		  <select id="selectProductList" parameterType="java.lang.String"  resultType="cn.com.phone.pojo.Product">
		    SELECT productid,productname,productprice,productaddress
		    ,productctiy,productmess,productpic,flag,note
		     FROM  product,seach WHERE seach.seachp LIKE "%" #{value} "%" AND seach.pid=product.productid;
		      <!-- select * from product where productname like "%" #{value} "%"
		   -->
		  </select>
 	 <!-- 查询商品华为 -->
  	<select id="selectHuaWei"  resultMap="BaseResultMap" >
		    SELECT *  FROM  huawei_info WHERE STATE=1
	</select>
	 	 <!-- 查询商品小米 -->
  	<select id="selectXiaoMi"  resultMap="BaseResultMap" >
		    SELECT *  FROM  xiaomi_info WHERE STATE=1
	</select>
		 <!-- 查询商品OPPO -->
  	<select id="selectOppo"  resultMap="BaseResultMap" >
		    SELECT *  FROM  oppo_info WHERE STATE=1
	</select>
		 <!-- 查询商品荣耀 -->
  	<select id="selectHonour"  resultMap="BaseResultMap" >
		    SELECT *  FROM  honour_info WHERE STATE=1
	</select>
		 <!-- 查询商品vivo -->
  	<select id="selectVivo"  resultMap="BaseResultMap" >
		    SELECT *  FROM  vivo_info WHERE STATE=1
	</select>
		 <!-- 查询商品魅族 -->
  	<select id="selectMeizu"  resultMap="BaseResultMap" >
		    SELECT *  FROM  meizu_info WHERE STATE=1
	</select>
		 <!-- 查询商品苹果 -->
  	<select id="selectApple"  resultMap="BaseResultMap" >
		    SELECT *  FROM  apple_info WHERE STATE=1
	</select>
	<!-- ################################################################################### -->
	<!-- 根据商品编号华为 -->
	 <select id="selectByHuaWeiProductId"  parameterType="java.lang.Integer" resultMap="BaseResultMap"  >
    	select  *  from huawei_info where PRODUCT_ID = #{productId,jdbcType=INTEGER}
   </select>
   <!-- 根据商品编号小米-->
	 <select id="selectByXiaoMiProductId"  parameterType="java.lang.Integer" resultMap="BaseResultMap"  >
    	select  *  from xiaomi_info where PRODUCT_ID = #{productId,jdbcType=INTEGER}
   </select>
      <!-- 根据商品编号OPPO-->
	 <select id="selectByOppoProductId"  parameterType="java.lang.Integer" resultMap="BaseResultMap"  >
    	select  *  from oppo_info where PRODUCT_ID = #{productId,jdbcType=INTEGER}
   </select>
      <!-- 根据商品编号荣耀-->
	 <select id="selectByHonourProductId"  parameterType="java.lang.Integer" resultMap="BaseResultMap"  >
    	select  *  from honour_info where PRODUCT_ID = #{productId,jdbcType=INTEGER}
   </select>
      <!-- 根据商品编号vivo-->
	 <select id="selectByVivoProductId"  parameterType="java.lang.Integer" resultMap="BaseResultMap"  >
    	select  *  from vivo_info where PRODUCT_ID = #{productId,jdbcType=INTEGER}
   </select>
      <!-- 根据商品编号魅族-->
	 <select id="selectByMeizuProductId"  parameterType="java.lang.Integer" resultMap="BaseResultMap"  >
    	select  *  from meizu_info where PRODUCT_ID = #{productId,jdbcType=INTEGER}
   </select>
      <!-- 根据商品编号苹果-->
	 <select id="selectByAppleProductId"  parameterType="java.lang.Integer" resultMap="BaseResultMap"  >
    	select  *  from apple_info where PRODUCT_ID = #{productId,jdbcType=INTEGER}
   </select>
</mapper>